// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: users.sql

package database

import (
	"context"
	"time"
)

const createuser = `-- name: Createuser :one
INSERT INTO users (id , created_at, updated_at, name,api_key)
VALUES (?,?,?,?,
encode(hex(randomblob(32)))
)
RETURNING id, created_at, updated_at, name, api_key
`

type CreateuserParams struct {
	ID        string
	CreatedAt time.Time
	UpdatedAt time.Time
	Name      string
}

func (q *Queries) Createuser(ctx context.Context, arg CreateuserParams) (User, error) {
	row := q.db.QueryRowContext(ctx, createuser,
		arg.ID,
		arg.CreatedAt,
		arg.UpdatedAt,
		arg.Name,
	)
	var i User
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.Name,
		&i.ApiKey,
	)
	return i, err
}
